%YAML 1.2
---
# Instructions for Gemini API: Audio Transcription and Translation

# --- Transcription Task ---
transcription_prompt: |
  **TASK:** Transcribe the provided audio file into a JSON array of subtitle objects.

  **CORE REQUIREMENTS:**
  1.  **Vocal Focus:**
      *   Prioritize transcription of the **lead vocalist**.
      *   If no lead vocalist, transcribe the **main choir melody**.
      *   IGNORE background vocals, ad-libs, and harmonies unless they are the sole vocal element.
  2.  **Accuracy & Uncertainty:**
      *   Accuracy is CRITICAL.
      *   If a segment's lyrics are unclear, unintelligible, heavily obscured by noise, or non-lyrical (e.g., instrumental), set the `text` field for that subtitle object to EXACTLY: `[INAUDIBLE]`
      *   Do NOT guess, invent, or add any other text around `[INAUDIBLE]`. Proceed to the next segment.
  3.  **Output Format:** JSON Array ONLY.

  **JSON OBJECT SPECIFICATION (Per Subtitle):**
  *   `id`: (Integer) Sequential identifier.
  *   `start_time`: (String) Start time in EXACT `MM:SS.milliseconds` format (e.g., "00:15.320").
  *   `end_time`: (String) End time in EXACT `MM:SS.milliseconds` format (e.g., "00:18.100").
  *   `text`: (String) The transcribed text OR `[INAUDIBLE]`.

  **TEXT FIELD RULES (`text`):**
  *   **Single Line:** MUST contain only a single line of text. NO `\n` characters allowed.
  *   **Conciseness:** Keep text to short, natural phrases or lyric lines from the focused vocal track. Create new objects for subsequent phrases.
  *   **No End Period:** Do NOT add a period (.) at the end of the text.
  *   **Phonetics:** Transcribe Hebrew words pronounced in English phonetically (e.g., "yerushalim habnuya").

  **SEGMENTATION:** Divide audio into subtitle objects intelligently based on natural pauses or distinct lyric phrases.

  **EXAMPLE OUTPUT STRUCTURE:**
  ```json
  [
    { "id": 1, "start_time": "00:12.759", "end_time": "00:18.859", "text": "I will never forget the night I saw my father cry" },
    { "id": 2, "start_time": "00:21.359", "end_time": "00:25.500", "text": "I was frightened and alone" },
    { "id": 3, "start_time": "00:25.600", "end_time": "00:28.729", "text": "and his tears" },
    { "id": 4, "start_time": "01:15.100", "end_time": "01:19.450", "text": "The choir sang together now" },
    { "id": 5, "start_time": "02:30.110", "end_time": "02:35.800", "text": "[INAUDIBLE]" },
    { "id": 6, "start_time": "02:36.000", "end_time": "02:40.120", "text": "He looked towards the sky" }
  ]
  ```

# --- Translation Task ---
translation_prompt_template: |
  **TASK:** Translate the `text` field of the provided English JSON subtitle objects into natural-sounding Hebrew.

  **INPUT:** English JSON array (provided below).

  **CORE REQUIREMENTS:**
  1.  **Structure Preservation:** Maintain the EXACT original JSON structure, including `id`, `start_time` (string, `MM:SS.ms`), and `end_time` (string, `MM:SS.ms`) for every object.
  2.  **Target Field:** Translate ONLY the value of the `text` field.
  3.  **`[INAUDIBLE]` Handling:** If the English `text` field is EXACTLY `[INAUDIBLE]`, the Hebrew `text` field MUST also be EXACTLY `[INAUDIBLE]`. Do NOT translate this token.
  4.  **Output Format:** Translated JSON Array ONLY.

  **HEBREW TEXT RULES (Translated `text`):**
  *   **Natural Language:** Translation must sound natural, as if spoken or sung in Hebrew.
  *   **Single Line:** MUST contain only a single line of text. NO `\n` characters allowed.
  *   **No End Period:** Do NOT add a period (.) at the end of the text.
  *   **No Nikud:** Do NOT add Hebrew diacritics (nikud). Use standard Hebrew letters only.

  **Original English JSON:**
  ```json
  {english_json_prompt_string}
  ```
