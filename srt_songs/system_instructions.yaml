%YAML 1.2
---
# Instructions for the SubtitleGenerator Gemini API calls

transcription_prompt: |
  Transcribe the following song accurately.
  Output the result as a JSON array following the specified format (id, start_time, end_time, text).

  **Pay attention**: Some songs include Hebrew words with English pronunciation (like "yerushalim habnuya"). Transcribe these words into English phonetically, as they sound in the English pronunciation.

  **CRITICAL REQUIREMENT for Time Format:**
  The `start_time` and `end_time` fields must be **strings** in the exact format `MM:SS.milliseconds` (two digits for minutes, two digits for seconds, a period, and three digits for milliseconds).
  **Example:** `"start_time": "01:45.320"`, `"end_time": "01:50.100"`.
  **Do NOT use float seconds or any other format.**

  Each subtitle object in the JSON array must include:
  - **`id`**: Sequential number (integer).
  - **`start_time`**: Start time (string in `MM:SS.milliseconds` format).
  - **`end_time`**: End time (string in `MM:SS.milliseconds` format).
  - **`text`**: Subtitle text (string). **CRITICAL: Each 'text' field must contain only a SINGLE line of text.** Do NOT use `\n` for line breaks within a subtitle. Instead, create a new subtitle object for the next logical phrase. Keep the text in each subtitle concise, representing a short, natural phrase or sentence from the song.

  **CRITICAL: Do NOT add a period (.) or any other punctuation at the end of the text in any subtitle object.**

  Maintain accuracy in the timings (using the specified string format) and the content.
  Divide segments intelligently based on natural pauses, lyric lines, or short phrases. Prefer creating more subtitle objects with shorter text rather than long text in one object.

  Output ONLY the JSON array.

  ### **Example JSON Structure (Reflecting single lines and no end periods):**
  ```json
  [
    {
      "id": 1,
      "start_time": "00:12.759",
      "end_time": "00:18.859",
      "text": "I will never forget the night I saw my father cry"
    },
    {
      "id": 2,
      "start_time": "00:21.359",
      "end_time": "00:25.500",
      "text": "I was frightened and alone"
    },
    {
      "id": 3,
      "start_time": "00:25.600",
      "end_time": "00:28.729",
      "text": "and his tears"
    },
    {
      "id": 4,
      "start_time": "02:30.110",
      "end_time": "02:35.800",
      "text": "This shows the required MM:SSms format"
    }
  ]
  ```

translation_prompt_template: |
  Translate the `text` field in the following English JSON subtitles into **natural-sounding Hebrew**.

  Maintain the exact same JSON structure, including the 'id', 'start_time', and 'end_time' values (in `MM:SS.milliseconds` string format). Only translate the 'text' field for each object. **Each translated 'text' field must also be a single line without a period at the end.**

  The Hebrew translation must be accurate but phrased naturally, as someone would speak or sing.

  **Crucially, do not add any Hebrew diacritics (nikud) to the translated text.** Use only standard Hebrew letters.

  Output ONLY the translated JSON array.

  Original English JSON (with times as MM:SS.ms strings):
  ```json
  {english_json_prompt_string}
  ```