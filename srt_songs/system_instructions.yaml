%YAML 1.2
---
# Instructions for the SubtitleGenerator Gemini API calls

transcription_prompt: |
  Transcribe the following song accurately, focusing on the primary vocal track.
  Output the result as a JSON array following the specified format (id, start_time, end_time, text).

  **Vocal Focus:**
  *   Your primary focus should be transcribing the **lead vocalist's lyrics**.
  *   If there is no distinct lead vocalist (e.g., a choir), focus on the **main melody line sung by the choir**.
  *   Ignore background vocals, harmonies, or ad-libs unless they are the *only* vocal element in a specific time segment.

  **Accuracy and Handling Uncertainty:**
  *   Accuracy is paramount. If a segment of the audio corresponding to a subtitle's timeframe is **unclear, unintelligible**, contains heavy background noise obscuring the voice, or consists only of non-lyrical sounds (like instrumental breaks, coughs) where lyrics might otherwise be expected, **do NOT invent or guess the text**.
  *   Instead, for that specific subtitle object, set the `text` field precisely to the string: **`[INAUDIBLE]`**
  *   Do not add any other words or explanations around `[INAUDIBLE]`. Just use that exact text. Then, proceed to the next subtitle segment.

  **Formatting Requirements:**
  *   **Time Format:** The `start_time` and `end_time` fields MUST be **strings** in the exact format `MM:SS.milliseconds` (e.g., `"01:45.320"`). **Do NOT use float seconds.**
  *   **Single Line Text:** Each `text` field must contain only a **SINGLE line of text**. Do NOT use `\n` for line breaks within a subtitle. Create a new subtitle object for the next logical phrase.
  *   **Concise Phrases:** Keep the text in each subtitle concise, representing a short, natural phrase or sentence from the focused vocal track. Prefer creating more subtitle objects with shorter text.
  *   **No End Punctuation:** **Do NOT add a period (.)** or any other punctuation at the very end of the text in any subtitle object (unless it's part of the actual lyrics like "Oh!").

  **Output Structure:**
  *   Each subtitle object in the JSON array must include: `id` (sequential integer), `start_time` (string), `end_time` (string), `text` (string).
  *   Maintain accuracy in timings. Divide segments intelligently based on natural pauses, lyric lines, or short phrases from the focused vocal track.
  *   Output ONLY the JSON array.

  ### **Example JSON Structure (Reflecting focus, single lines, no end periods, and uncertainty):**
  ```json
  [
    {
      "id": 1,
      "start_time": "00:12.759",
      "end_time": "00:18.859",
      "text": "I will never forget the night I saw my father cry" // Soloist line
    },
    {
      "id": 2,
      "start_time": "00:21.359",
      "end_time": "00:25.500",
      "text": "I was frightened and alone" // Soloist line
    },
    {
      "id": 3,
      "start_time": "00:25.600",
      "end_time": "00:28.729",
      "text": "and his tears" // Soloist line
    },
    {
      "id": 4,
      "start_time": "01:15.100",
      "end_time": "01:19.450",
      "text": "The choir sang in harmony" // Choir focus (assuming no soloist here)
    },
    {
      "id": 5,
      "start_time": "02:30.110",
      "end_time": "02:35.800",
      "text": "[INAUDIBLE]" // Segment was unclear or instrumental
    },
    {
      "id": 6,
      "start_time": "02:36.000",
      "end_time": "02:40.120",
      "text": "Returning to the main theme now" // Soloist resumes
    }
  ]
  ```

translation_prompt_template: |
  Translate the `text` field in the following English JSON subtitles into **natural-sounding Hebrew**.

  Maintain the exact same JSON structure, including the 'id', 'start_time', and 'end_time' values (in `MM:SS.milliseconds` string format). Only translate the 'text' field for each object.

  **IMPORTANT:** If the English `text` field is `[INAUDIBLE]`, the translated Hebrew `text` field should **also** be exactly `[INAUDIBLE]`. Do not attempt to translate this specific token.

  For all other text fields:
  *   The Hebrew translation must be accurate but phrased naturally, as someone would speak or sing.
  *   Each translated 'text' field must also be a single line without a period at the end.
  *   **Crucially, do not add any Hebrew diacritics (nikud) to the translated text.** Use only standard Hebrew letters.

  Output ONLY the translated JSON array.

  Original English JSON (with times as MM:SS.ms strings):
  ```json
  {english_json_prompt_string}
  ```
